pipeline {
    
    agent none

    stages{
        stage('build'){
	    agent {
		docker { 
			image 'maven:3.6.1-jdk-8-alpine'
			args '-v $HOME/.m2:/root/.m2'
		}
	    }
	    when{
		changeset "**/worker/**"
		}
            steps{
                echo 'Build worker app.'
		dir('worker'){
			sh 'mvn compile'
		}
            }
        }
        stage('test'){
	    agent {
		docker { 
			image 'maven:3.6.1-jdk-8-alpine'
			args '-v $HOME/.m2:/root/.m2'
		}
	    }
	    when{
		changeset "**/worker/**"
		}
            steps{
                echo 'Running unit test on worker app.'
		dir('worker'){
			sh 'mvn clean test'
		}
            }
        }
        stage('package'){
	    agent {
		docker { 
			image 'maven:3.6.1-jdk-8-alpine'
			args '-v $HOME/.m2:/root/.m2'
		}
	    }
	    when{
	    	branch 'master'
		changeset "**/worker/**"
		}
            steps{
                echo 'Package worker app.'
		dir('worker'){
			sh 'mvn package -DskipTests'
			archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
		}
            }
        }
        stage('docker-package'){
	    agent any
	    when{
	    	branch 'master'
		changeset "**/worker/**"
		}
            steps{
                echo 'Package worker app with docker.'
		withCredentials([usernamePassword(credentialsID: 'dockerlogin', passwordVariable: 'dockerloginPassword', usernameVariable: 'dockerloginUser')]){
		sh "docker login -u ${env.dockerloginUser} -p ${env.dockerloginPassword}"
		sh "docker image build -t baugereau/worker:v${env.BUILD_ID} -f ./worker/Dockerfile ."
		sh "docker image tag baugereau/worker:v${env.BUILD_ID} baugereau/worker:${env.BRANCHNAME}"
		sh 'docker image push baugereau/worker'
		}
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline for worker is completed.'
        }
    }
}
