pipeline {
    
    agent none

    stages{
        stage('build'){
	    agent { 
		docker { 
			image 'python:2.7.16-slim'
			args '--user root'
			}
		}
	    when{
		changeset "**/vote/**"
		}
            steps{
                echo 'Build vote app.'
		dir('vote'){
			sh 'pip install -r requirements.txt'
		}
            }
        }
        stage('test'){
	    agent { 
		docker { 
			image 'python:2.7.16-slim'
			args '--user root'
			}
		}
	    when{
		changeset "**/vote/**"
		}
            steps{
                echo 'Running unit test on vote app.'
		dir('vote'){
			sh 'pip install -r requirements.txt'
			sh 'nosetests -v'
		}
            }
        }
        stage('docker-package'){
	    agent any
	    when{
	    	branch 'master'
		changeset "**/vote/**"
		}
            steps{
                echo 'Package vote app with docker.'
		script {
			docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-baugereau') {
				def workerImage = docker.build("baugereau/vote:v${env.BUILD_ID}", "./vote")
				workerImage.push()
				workerImage.push("vote")
			}
		}
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline for vote is completed.'
        }
    }
}
